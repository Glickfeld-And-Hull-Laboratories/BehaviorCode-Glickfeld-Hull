<?xml version="1.0"?>
<monkeyml version="1.0">
    <io_devices tag="IO Devices">
      <iodevice tag="LabJackU6" priority="" type="LabJackU6" 
		pulse_duration="juice" pulse_on="juice" 
		lever1="FIO1" lever2="" 
		lever1_solenoid="FIO2"
		lever2_solenoid=""
		laser_trigger="laserTriggerFIO"
		strobed_digital_word="strobedDigitalWord"/>
      <iodevice tag="FakeMonkey" priority="" type="fake_monkey" id="" alt="" spike_rate="10"/>
      <iodevice type="serverside_conduit" tag="Server-side Event Conduit" resource_name="server_conduit"/>
    </io_devices>
    <variables tag="Variables">
        <folder tag="Behavioral Control">
            <variable tag="subjectNum" scope="global" logging="when_changed" default_value="0" type="integer" persistant="1"/>
            <variable tag="experimentXmlTrialId" scope="global" logging="when_changed" default_value="11" type="integer" persistant="1"/> <!-- n.b. it is forcibly set each trial below -->
            <variable tag="itiTimeMs" scope="global" logging="when_changed" default_value="100" type="integer" persistant="1"/>
            <variable tag="stimulusOnTimeMs" scope="global" logging="when_changed" default_value="1000" type="integer" persistant="1"/>
            <variable tag="postStimulusTimeMs" scope="global" logging="when_changed" default_value="400" type="integer" persistant="1"/>

            <variable tag="rewardProb" scope="global" logging="when_changed" default_value="0.2" type="float" persistant="1"/>    <!--reward is given at rand time during stim or poststim-->
            <variable tag="rewardTimeUs" scope="global" logging="when_changed" default_value="20000" type="integer" persistant="1"/>

            <variable tag="doTrialLaser" scope="global" logging="when_changed" default_value="0" type="integer" persistant="1"/>
            <variable tag="laserOnTimeFromStartOfItiMs" scope="global" logging="when_changed" default_value="200" type="integer" persistant="1"/>
            <variable tag="trialLaserProb" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="trialLaserPowerMw" scope="global" logging="when_changed" default_value="1e-20" type="float" persistant="1"/>
            <variable tag="laserOffPowerMw" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="trialLaserOnTimeMs" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="trialLaserOffTimeMs" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="laserTransitionRampUpDownMs" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="laserTransitionDoExpRamp" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>

            <variable tag="stopAfterNTrials" scope="global" logging="when_changed" default_value="-1" type="integer" persistant="1"/>
        </folder>

        <folder tag="Stimuli">
            <variable tag="gratingSpatialFreqCPD" scope="global" logging="when_changed" default_value="0.05" type="float" persistant="1"/>
            <variable tag="gratingSpeedDPS" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="gratingWidthDeg" scope="global" logging="when_changed" default_value="200" type="float" persistant="1"/>
            <variable tag="gratingHeightDeg" scope="global" logging="when_changed" default_value="200" type="float" persistant="1"/>
            <variable tag="gratingContrast" scope="global" logging="when_changed" default_value="1.0" type="float" persistant="1"/>
            <variable tag="gratingElevationDeg" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
            <variable tag="gratingAzimuthDeg" scope="global" logging="when_changed" default_value="0" type="float" persistant="1"/>
        </folder>
        <folder tag="Task Status">
        </folder>
        <folder tag="Online Display">
            <variable tag="sync" scope="global" logging="when_changed" default_value="0" type="integer"/>
        </folder>
        <folder tag="Hardware variables">
            <variable tag="FIO1" full_name="FIO1" default_value="0" scope="GLOBAL" type="INTEGER" editable="never" logging="when_changed"/>
            <variable tag="FIO2" full_name="FIO2" default_value="0" scope="GLOBAL" type="boolean" editable="never" logging="when_changed"/>
            <variable tag="laserTriggerFIO" full_name="laserTriggerFIO" default_value="0" scope="GLOBAL" type="boolean" logging="when_changed" persistant="0"/>
            <variable tag="strobedDigitalWord" full_name="strobedDigitalWord" default_value="0" scope="GLOBAL" type="integer" logging="when_changed" persistant="0"/>
            <variable tag="juice" full_name="juice" scope="GLOBAL" logging="when_changed" default_value="0" type="integer"/>
            <variable tag="sendLaserParams" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="sendSerialParams" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
        </folder>
        <folder tag="Internal Variables">
	    <variable tag="rrStimulusNumber" scope="local" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tGratingDirectionDeg" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tTrialLaserPowerMw" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
            <variable tag="tTrialLaserOnTimeMs" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
            <variable tag="tTrialLaserOffTimeMs" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
            <variable tag="trialStart" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tTrialStartMWTimestampMs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="stimOnTimeUs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tGiveRewardThisTrial" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tRewardTimeFromStimOnMs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tIsRewardGiven" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
            <variable tag="tTrialsDoneSinceStart" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
        </folder>
        <folder tag="Old Variables: delete on changing XML name: values don't do anything">
        </folder>
    </variables>
    <sounds tag="Sounds">
        <sound tag="rewardSound" type="wav_file" path="../wavs/shortCorrect.wav"></sound>
    </sounds>
    <stimuli tag="Stimuli">
        <stimulus type="rectangle" tag="topRect" color="0.5,0.5,0.5" 
		  x_size="gratingWidthDeg" y_size="gratingHeightDeg" 
		  x_position="0" y_position="0" rotation="0" 
		  alpha_multiplier="1.0-gratingContrast"></stimulus>
        <stimulus type="blank_screen" tag="background" color="0.5,0.5,0.5"></stimulus>
	<stimulus type="drifting_grating" tag="driftStimulus" 
		  direction="0" starting_phase="0" 
		  spatial_frequency="gratingSpatialFreqCPD" 
		  speed="gratingSpeedDPS" 
		  grating_type="sinusoid" mask="gaussian" std_dev="0.3" mean="0.1" 
		  x_size="gratingWidthDeg" y_size="gratingHeightDeg" 
		  x_position="gratingAzimuthDeg" y_position="gratingElevationDeg" 
		  rotation="tGratingDirectionDeg" 
		  alpha_multiplier="1.0"></stimulus>
    </stimuli>
    <experiment tag="Experiment" full_name="DigitalInExample">
        <protocol tag="JuiceOnHoldProtocol" full_name="Protocol" interruptable="YES" selection="sequential_ascending" nsamples="1" sampling_method="cycles" description="" interruptible="YES">
            <action tag="Queue Stimulus" type="queue_stimulus" stimulus="background"></action>
            <action tag="Update Stimulus 3" type="update_stimulus_display"></action>
            <action type="assignment" tag="juice = 0" variable="juice" value="0"></action>
            <action type="assignment" variable="tTrialsDoneSinceStart" value="0"/>

            <block tag="New Block" nsamples="99999" sampling_method="cycles" selection="sequential" interruptible="1">
            <trial tag="Trial" full_name="Trial" description="" interruptible="1" selection="sequential" nsamples="1" sampling_method="cycles">
            <trial tag="New List" nsamples="12" sampling_method="samples" selection="random_without_replacement">
            <range_replicator tag="New Replicator" from="0" to="11" step="1" variable="rrStimulusNumber">  <!-- must set 'to' here and nsamples above  to stimulusNSteps-1 manually!-->
                <task_system tag="TS" full_name="TS" interruptable="YES" description="" interruptible="YES" _error="Task Systems must contain >=1 transition that yields to parent">
                    <task_system_state tag="Intertrial" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>
 
                        <!-- if we have done enough trials, abort this trial - before any encodes/sync are done -->
                        <action type="if" condition="stopAfterNTrials > 0 &amp;&amp; tTrialsDoneSinceStart >= stopAfterNTrials">
                          <action type="report" message="** Stopping after completing $stopAfterNTrials trials"/>
                          <action type="stop_experiment"/>  
                        </action>

                        <action tag="Start IO Device" type="start_device_IO" device="LabJackU6"></action>

			<action type="assignment" variable="tTrialStartMWTimestampMs" value="now()/1000"></action>  <!-- integer valued ms timestamp -->

			<action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
			<action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
			<action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>

                        <!--Transmit the trial timestamp so strobed code sequences are unique -->
                        <action type="assert" condition="tTrialStartMWTimestampMs &lt;= 2147483648" 
                                message="tTrialStartMWTimestampMs is too large - should happen only after several days of running!?"
                                stop_on_failure="1"/>  
                                <!-- prevent overflow outside 2**31ms ~ 10 days - I don't know how to get unsigned casts in the XML -->
                        <!-- encode trialStartTimestamp in bytes: 4 bytes: millions of seconds, 1000s, s, ms -->
			<action type="assignment" tag="Encode TimestampStart" variable="strobedDigitalWord" value="200"/>
			<action type="assignment" variable="strobedDigitalWord" value="tTrialStartMWTimestampMs/1000/1000000"/>  <!-- mega s -->
			<action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs- (tTrialStartMWTimestampMs/1000000000)*1000000000) /1000000"/> <!-- mega to kilo s -->
			<action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs- (tTrialStartMWTimestampMs/1000000)*1000000) /1000"/> <!-- 0-999s -->
			<action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs - (tTrialStartMWTimestampMs/1000)*1000)"/>  <!-- ms -->
			<action type="assignment" tag="Encode TimestampEnd" variable="strobedDigitalWord" value="201"/>

 

                        <action type="assignment" tag="Sync Matlab" variable="sync" value="1"></action>
                        <action type="assignment" tag="Set trialStart" variable="trialStart" value="1"></action>
                        <action type="assignment" variable="juice" value="0"></action>
                        <action type="assignment" tag="-" variable="laserTriggerFIO" value="0"></action> 
                        <action type="assignment" variable="sendLaserParams" value="0"/>

                        <action type="assignment" tag="-" variable="experimentXmlTrialId" value="11"></action>

			<!-- choose correct stimulus number based on odds -->
                        <action type="assignment" tag="-" variable="tGratingDirectionDeg" 
                                value="((1.0*rrStimulusNumber) / 12.0) * 360"></action> 
                        <action type="report" tag="-" message="Direction this trial is $tGratingDirectionDeg"></action>


			<!-- choose laser power this trial  -->
                        <action type="if" condition="doTrialLaser">
                          <action type="assignment" variable="tTrialLaserPowerMw"  value="0"/> <!-- default -->
                          <action type="if" condition="rand(0,1000)/1000.0 &lt; trialLaserProb">
                            <action type="assignment" variable="tTrialLaserPowerMw"  value="trialLaserPowerMw"/>
                          </action>
                        </action>
                        <action type="report" message="Laser power this trial is $tTrialLaserPowerMw"></action>
                        <!-- send params to laser right away-->
                        <action type="if" tag="-" condition="doTrialLaser">
                          <action type="assignment" tag="Send laser params to controller" variable="sendLaserParams" value="1"/>
                          <action type="assignment" tag="Send laser params to controller" variable="sendLaserParams" value="0"/>
                        </action>


                        <!-- choose to give reward and time: range [0,stimulusOnTimeMs+postStimulusTimeMs] -->
                        <action type="assignment" tag="-" variable="tRewardTimeFromStimOnMs" 
                                value="rand(0,(stimulusOnTimeMs+postStimulusTimeMs))"></action>
                        <action type="assignment" tag="-" variable="tGiveRewardThisTrial" 
                                value="rand(0,1000) &lt; rewardProb*1000"></action>
                        <action type="assignment" tag="-" variable="tIsRewardGiven" value="0"></action>

			<!-- ITI setup -->
                        <action type="start_timer" tag="Start interTrialTimer" timer="interTrialTimer" timebase="" duration="itiTimeMs" duration_units="ms"/>
                        <action type="start_timer" timer="laserOnsetTimer"  timebase="" duration="laserOnTimeFromStartOfItiMs" duration_units="ms"/>
                        <action type="assignment" tag="Encode ItiStart" variable="strobedDigitalWord" value="6"></action>

                        <action type="report" message="In ITI, waiting for $itiTimeMs ms"></action>                        

                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" target="TriggerLaser" timer="laserOnsetTimer"></transition>
                    </task_system_state>

                    <task_system_state tag="TriggerLaser" interruptible="YES">

                        <!-- trigger laser activation if requested -->
                        <action type="if" tag="-" condition="doTrialLaser &amp;&amp; tTrialLaserPowerMw > 0">                        
                          <action type="assignment" variable="laserTriggerFIO" value="1"></action> 
                          <action type="assignment" tag="Encode LaserStimOn" variable="strobedDigitalWord" value="5"></action>
                        </action>

                        <!-- spend the remainder of ITI in this state -->
                        <transition type="timer_expired" target="StartTrialStimOn" timer="interTrialTimer"></transition>
                    </task_system_state>


                    <task_system_state tag="StartTrialStimOn" full_name="" description="" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>

                        <action tag="Queue Stimulus" type="queue_stimulus" stimulus="driftStimulus"></action>
                        <action tag="Queue Stimulus" type="queue_stimulus" stimulus="topRect"></action>    
                        <action type="play_dynamic_stimulus" stimulus="driftStimulus" tag="start"></action>
                        
                        <action tag="Update Display" type="update_stimulus_display"></action>
                        <action type="assignment" tag="Encode VisStimOn" variable="strobedDigitalWord" value="4"></action>

                        <action type="start_timer" tag="-" timer="stimDurationTimer" 
				timebase="" duration="stimulusOnTimeMs" duration_units="ms"></action>
			<action type="assignment" tag="-" variable="stimOnTimeUs" value="now()"></action>
			
                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="Always Go to RewardDuringStim" target="RewardDuringStim"></transition>
                    </task_system_state>

                    <task_system_state tag="RewardDuringStim" full_name="" description="" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>

			<!-- Give reward if all conditions are met -->
                        <action type="if" tag="-" condition="tGiveRewardThisTrial == 1">
			  <action type="if" tag="-" condition="tIsRewardGiven == 0">
			    <action type="if" tag="-" condition="((now()-stimOnTimeUs)/1000.0) - tRewardTimeFromStimOnMs ">
			      
			      <action type="assignment" tag="-" variable="juice" value="rewardTimeUs"></action>
			      <action type="assignment" tag="Encode Reward" variable="strobedDigitalWord" value="10"></action>
			      <action type="report" tag="Report" message="juice = $juice"></action>
			      <action tag="Play reward sound" type="play_sound" sound="rewardSound"></action>

			      <action type="assignment" tag="-" variable="tIsRewardGiven" value="1"></action> <!--only 1 rew per tr-->
			    </action>
			  </action>
			</action>

                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="-" target="TurnStimOff" timer="stimDurationTimer"></transition>
                        <transition type="direct" tag="-" target="RewardDuringStim"></transition> <!-- loop actions -->
		    </task_system_state>

                    <task_system_state tag="TurnStimOff" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>

                        <action tag="-" type="dequeue_stimulus" stimulus="driftStimulus"></action>
			<action tag="-" type="dequeue_stimulus" stimulus="topRect"></action>
                        <action tag="-" type="update_stimulus_display"></action>
                        <action type="assignment" tag="Encode VisStimOff" variable="strobedDigitalWord" value="14"></action>

                        <action type="start_timer" tag="-" timer="postStimulusTimer"
				timebase="" duration="postStimulusTimeMs" duration_units="ms"></action>

                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="direct" tag="-" target="RewardDuringPostStim"></transition>
                    </task_system_state>

                    <task_system_state tag="RewardDuringPostStim" full_name="" description="" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>

			<!-- Give reward if all conditions are met -->
                        <action type="if" tag="-" condition="tGiveRewardThisTrial == 1">
			  <action type="if" tag="-" condition="tIsRewardGiven == 0">
			    <action type="if" tag="-" condition="((now()-stimOnTimeUs)/1000.0) > tRewardTimeFromStimOnMs">
			      
			      <action type="assignment" tag="-" variable="juice" value="rewardTimeUs"></action>
			      <action type="assignment" tag="Encode Reward" variable="strobedDigitalWord" value="10"></action>
			      <action type="report" tag="Report" message="juice = $juice"></action>
			      <action tag="Play reward sound" type="play_sound" sound="rewardSound"></action>

			      <action type="assignment" tag="-" variable="tIsRewardGiven" value="1"></action> <!--only 1 rew per tr-->
			    </action>
			  </action>
			</action>

                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="timer_expired" tag="-" target="EndTrial" timer="postStimulusTimer"></transition>
                        <transition type="direct" tag="-" target="RewardDuringPostStim"></transition> <!-- loop actions -->
		    </task_system_state>

                    <task_system_state tag="EndTrial" interruptible="YES">
                        <action_marker _unmoveable="1" tag="Actions"></action_marker>

                        <action tag="Stop IO Device" type="stop_device_IO" device="LabJackU6"></action>
                        <action type="assignment" tag="End Matlab Sync" variable="sync" value="0"></action>

                        <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
                        <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
                        <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>

                        <!-- trigger serial param dump to cyberkinetics -->
                        <action type="assignment" tag="Send serial params" variable="sendSerialParams" value="1"></action>
                        <action type="assignment" tag="Send serial params" variable="sendSerialParams" value="0"></action>

                        <action type="assignment" variable="tTrialsDoneSinceStart" value="tTrialsDoneSinceStart+1"/>

                        <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                        <transition type="yield" tag="return to parent task system"></transition>
                    </task_system_state>
                </task_system>
            </range_replicator>
            </trial>
            </trial>
            </block>
        </protocol>
    </experiment>
</monkeyml>

