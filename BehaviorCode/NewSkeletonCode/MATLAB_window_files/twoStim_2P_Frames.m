function [retval] = HoldAndDetectConstant(data_struct, input)
% Main matlab online function for HADC8
%
%  MH 100115: created
%  MH 130107: refactored into new expt* functions.
% call: exptSetupBridge, exptProcessBridgeInput, do your own thing, then exptRunSubfunctions

if nargin < 2,
    input = [];
    input.saveTime = datestr(now, 'yymmdd-HHMM'); 
end

ds = data_struct;
addpath('~/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/MatlabSharedCode');
addpath('~/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorAnalysis');

varsOneValEachTrial = {...
    'tTrialStartMWTimestampMs', ...
    'tItiWaitTimeMs', ...
    'tThisTrialStartTimeMs', ...
    'tLastTrialStartTimeMs', ...
    'tTempStimOdds', ...
    'tStimulusNumber', ...
    'tStimulusNumber2', ...
    'tStimOneGratingOnTimeMs', ...
    'tStimTwoGratingOnTimeMs', ...
    'tISITimeMs', ...
    'tStimOneDoVisualStim', ...
    'tStimOneDoAuditoryStim', ...
    'tStimOneGratingContrast', ...
    'tStimOneGratingDirectionDeg', ...
    'tStimOneGratingElevationDeg', ...
    'tStimOneGratingAzimuthDeg', ...
    'tStimOneGratingDiameterDeg', ...
    'tStimOneGratingSpatialFreqCPD', ...
    'tStimOneGratingTemporalFreqCPS', ...
    'tStimOneGratingPhaseDeg', ...
    'tStimOneSoundAmplitude', ...
    'tStimTwoDoVisualStim', ...
    'tStimTwoDoAuditoryStim', ...
    'tStimTwoGratingContrast', ...
    'tStimTwoGratingDirectionDeg', ...
    'tStimTwoGratingElevationDeg', ...
    'tStimTwoGratingAzimuthDeg', ...
    'tStimTwoGratingDiameterDeg', ...
    'tStimTwoGratingSpatialFreqCPD', ...
    'tStimTwoGratingTemporalFreqCPS', ...
    'tStimTwoGratingPhaseDeg', ...
    'tStimTwoSoundAmplitude', ...
    'tTrialLaserPowerMw', ...
    'tTrialLaserOnTimeMs', ...
    'tTrialLaserOffTimeMs', ...
    'tBlock2TrialNumber', ...
    'tNStimAccepted', ...
    'tItiWaitFrames', ...
    'nStimOneFramesOn', ...
    'nStimTwoFramesOn', ...
    'nFramesISI', ...
    'cItiStart',...
    'cLeverDown',...
    'cFirstStim',...
    'cStimOneOn',...
    'cStimTwoOn',...
    'cStimOneOff',...
    'cStimTwoOff',...
    'mwStimOneOnMs',...
    'mwStimTwoOnMs',...
    'mwStimOneOffMs',...
    'mwStimTwoOffMs',...
};

exptSetupBridge;

[input eventsConsts eventsTrial] ...
    = exptProcessBridgeInput(data_struct, input, varsOneValEachTrial);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

trN = input.trialSinceReset;

%% Counter/Frames Synchronization Section
try
    input.counterTimesUs{trN} = mwGetEventTime(eventsTrial, ds.event_codec, 'counter', 'all', [], 1);
    input.counterValues{trN} = mwGetEventValue(eventsTrial, ds.event_codec, 'counter', 'all', 1) ;
catch
    input.counterTimesUs{trN} = NaN;
    input.counterValues{trN} = NaN;
end

try
    input.wheelSpeedTimesUs{trN} = mwGetEventTime(ds.events, ds.event_codec, 'wheelSpeed', 'all', [], 1);
    input.wheelSpeedValues{trN} = mwGetEventValue(ds.events, ds.event_codec, 'wheelSpeed', 'all', 1) ;
catch
    input.wheelSpeedTimesUs{trN} = NaN;
    input.wheelSpeedValues{trN} = NaN;
end

%% disp status
stim1Str = sprintf('Stim1: con %g%%, dir %g%deg, %g%ms', input.tStimOneGratingContrast{trN}, input.tStimOneGratingDirectionDeg{trN}, input.tStimOneOnTimeMs{trN});
stim2Str = sprintf('Stim2: con %g%%, dir %g%deg, %g%ms', input.tStimTwoGratingContrast{trN}, input.tStimTwoGratingDirectionDeg{trN}, input.tStimTwoOnTimeMs{trN});
isiStr = sprintf('ISI: %g%ms', input.tISITimeMs{trN});

if ~input.doBlock2
  block2Str = '';
else
  block2Str = sprintf(' b2tr %d ', input.tBlock2TrialNumber{trN});
end
itiStr = sprintf('iti %d, ', round(input.tItiWaitTimeMs{trN}));
fprintf(1,'%s, %s %s\n', ...
        round(holdTimeMs), round(input.tTotalReqHoldTimeMs{trN}), round(reactTimeMs), ...
        stim1Str, stim2Str, block2Str, ...
        nJ, round(juiceD));

%% run subfunctions
input = exptRunSubfunctions(ds, input, { @plotTwoStim });



%% save variables for next trial
retval = input;

return


