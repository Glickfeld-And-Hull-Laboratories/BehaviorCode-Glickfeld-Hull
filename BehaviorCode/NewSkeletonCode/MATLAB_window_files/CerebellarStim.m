function [retval] = CerebellarStim(data_struct, input)
% Online Matlab processing for cerebellarStim.xml
% Code for Hull Lab - Duke Neurobiology
% Completed August 29th, 2014 by Andrew McKinney
% call: exptSetupBridge, exptProcessBridgeInput, package data, then call subfunctions

if nargin < 2, input = []; end

ds = data_struct;
addpath('~/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/MatlabSharedCode');
varsOneValEachTrial = { ...
    'tTempStim', ...
    'tCounter2', ...
    'ttCounter2', ...
    'tTactileStimulusDurationUs', ...
    'spCounter1', ...
    'spCounter2', ...
    'spCounter3', ...
    'spCounter4', ...
    'spCounter5', ...
    'spCounter6', ...
    'spCounter7', ...
    'spCounter8', ...
    'spCounter9', ...
    'spCounter10', ...
    'tITIWheelCounter', ...
    'tStimWheelCounter', ...
    'tTrialsDoneSinceStart', ...
    'tTrialStartMWTimestampMs', ...
    'tThisTrialStartTimeMs', ...
    'tLastTrialStartTimeMs', ...
    'tStimTurnedOn'};

exptSetupBridge;
[input eventsConsts eventsTrial] ...
    = exptProcessBridgeInput(data_struct, input, varsOneValEachTrial);
trN = input.trialSinceReset;


%fprintf(1,'Delay %dms, ActualHold %dms, React %dms, ITI %dms - %d Reward Size %dms\n', ...
%        round(delayTimeMs-(input.tPreRewardWindowMs{trN})), round(holdTimeMs), reactTimeMs, ...
%        round(input.tItiWaitTimeMs{trN}), ...
%        nJ, round(juiceD));

%% Run Reward Delay Plotting Function
input = exptRunSubfunctions(ds, input, { @plotRewardDelay });

%% Save Variables for next trial
retval = input;

return
