<?xml version="1.0"?>
<monkeyml version="1.0">
  <io_devices tag="IO Devices">
    <iodevice tag="LabJackU6" priority="" type="LabJackU6"   
              pulse_duration="juice" pulse_on="juice"  
              laser_trigger="laserTrigger"         
              trial_laser_powerMw="commandVoltage" 
              optic_device="optic_device"
              strobed_digital_word="strobedDigitalWord"
              counter="counter"/>
    <iodevice tag="FakeMonkey" priority="" type="fake_monkey" id="" alt="" spike_rate="10"/>
    <iodevice type="serverside_conduit" tag="Server-side Event Conduit" resource_name="server_conduit"/>
  </io_devices>
  <variables tag="Variables">
    <folder tag="Behavioral Control">
      <variable tag="subjectNum" scope="global" logging="when_changed" default_value="0" type="integer" persistant="1"/>
      <variable tag="experimentXmlTrialId" scope="global" logging="when_changed" default_value="512" type="integer" persistant="1"/> <!-- n.b. it is forcibly set each trial below -->
      <variable tag="optic_device" scope="global" logging="when_changed" default_value="lasergreen" type="string" persistant="0"/>
    </folder>
      
    <folder tag="trialStructure">
      <variable tag="tITIus" scope="global" logging="when_changed" default_value="1" type="float" persistant="0"/>
      <variable tag="tstayTrialTimeMs" scope="global" logging="when_changed" default_value="10000" type="integer" persistant="0"/>
      <variable tag="trunTrialTimeMs" scope="global" logging="when_changed" default_value="10000" type="integer" persistant="0"/>
    </folder>

    <folder tag="StimulusSpecs">
      <variable tag="stopAfterNTrials" scope="global" logging="when_changed" default_value="90" type="integer" persistant="1"/>
      <variable tag="DoSolenoid" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="1"/>
      <variable tag="solenoidStimulusDurationMs" scope="global" logging="when_changed" default_value="66.666" type="float" persistant="1"/>
      <variable tag="DoSound" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="1"/>
      <variable tag="SoundAmplitude" scope="global" logging="when_changed" default_value="1.0" type="float" persistant="1"/>
    </folder>

    <folder tag="Task Status">
      <variable tag="trialStart" scope="global" logging="when_changed" default_value="0" type="boolean"/>
    </folder>

    <folder tag="Command Volt for speed">
      <variable tag="stationary_speed" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
      <variable tag="run_speed" scope="global" logging="when_changed" default_value="2.5" type="float" persistant="0"/> 
    </folder>

    <folder tag="Online Display">
      <variable tag="sync" scope="global" logging="when_changed" default_value="0" type="integer"/>
    </folder>

    <folder tag="Hardware variables">
      <variable tag="laserTrigger" full_name="laserTrigger" default_value="0" scope="GLOBAL" type="boolean" logging="when_changed" persistant="0"/>
      <variable tag="strobedDigitalWord" full_name="strobedDigitalWord" default_value="0" scope="GLOBAL" type="integer" logging="when_changed" persistant="0"/>
      <variable tag="counter" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="juice" full_name="juice" scope="GLOBAL" logging="when_changed" default_value="0" type="integer" persistant="0"/>
    </folder>

    <folder tag="Internal Variables">
      <variable tag="cTactileStimTurnedOn" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/> 
      <variable tag="cAuditoryStimTurnedOn" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/> 
      <variable tag="tTrialsDoneSinceStart" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="tTrialStartMWTimestampMs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="tThisTrialStartTimeMs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="tLastTrialStartTimeMs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="commandVoltage" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
      <variable tag="speed_mode" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
      <variable tag="voltage" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
      <variable tag="solenoidStimulusDurationUs" scope="global" logging="when_changed" default_value="0" type="float" persistant="0"/>
    </folder> 

  </variables>

  <sounds tag="Sounds">
      <sound tag="Sound1" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound2" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound3" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound4" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound5" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound6" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound7" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound8" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound9" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound10" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound11" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound12" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound13" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound14" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound15" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound16" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound17" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <sound tag="Sound18" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/incorrectMouse.wav" amplitude="SoundAmplitude"></sound>
      <!--<sound tag="Sound2" type="wav_file" path="/Users/hullglick/Repositories/BehaviorCode-Glickfeld-Hull/BehaviorCode/NewSkeletonCode/wavs/sound-1k-200ms.wav" amplitude="SoundAmplitude"></sound> -->
  </sounds> 
  
  <experiment tag="Experiment" full_name="">
    <protocol tag="JuiceOnHoldProtocol" full_name="" selection="sequential" nsamples="1" sampling_method="cycles" description="" interruptible="YES">
      <action type="assignment" variable="tTrialsDoneSinceStart" value="0"></action>
      <!-- init actions run only on first trial after loading experiment -->
          <action type="assignment" variable="tLastTrialStartTimeMs" value="-1"></action>
          <action type="assignment" variable="tThisTrialStartTimeMs" value="-1"></action>
      <!-- init actions before running trials after any press of start-->
      <action tag="Start IO Device" type="start_device_IO" device="LabJackU6"></action>
      <trial tag="Trial 01" nsamples="2500" sampling_method="cycles" selection="sequential">
          

      <task_system tag="TS" full_name="TS" description="" interruptible="YES">
      <!--<range_replicator tag="New Replicator" from="0" to="89" step="1" variable="rrStimulusNumber"> -->
        <task_system_state tag="Inter Stimulus Interval" interruptible="YES">
          <action_marker _unmoveable="1" tag="Actions"></action_marker>
          <action type="assignment" tag="Sync Matlab" variable="sync" value="1"></action>
          <action type= "assignment" variable="solenoidStimulusDurationUs" value= "solenoidStimulusDurationMs * 1000" ></action>
          

          <!-- if we have done enough trials, abort this trial - before any encodes/sync are done -->
          <action type="if" condition="stopAfterNTrials > 0 &amp;&amp; tTrialsDoneSinceStart > stopAfterNTrials">
            <action type="report" message="** Stopping after completing $stopAfterNTrials trials"></action>
            <action type="stop_experiment"></action>
          </action>

          <action type="assignment" variable="tTrialStartMWTimestampMs" value="now()/1000"></action>  <!-- integer valued ms timestamp -->

          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
          <!--Transmit the trial timestamp so strobed code sequences are unique -->
          <action type="assert" condition="tTrialStartMWTimestampMs &lt;= 2147483648"
            message="tTrialStartMWTimestampMs is too large - should happen only after several days of running!?"
            stop_on_failure="1"/>
            <!-- prevent overflow outside 2**31ms ~ 10 days - I don't know how to get unsigned casts in the XML -->
            <!-- encode trialStartTimestamp in bytes: 4 bytes: millions of seconds, 1000s, s, ms -->
            <action type="assignment" tag="Encode TimestampStart" variable="strobedDigitalWord" value="200"/>
            <action type="assignment" tag="Encode TimestampEnd" variable="strobedDigitalWord" value="201"/>
            <action type="assignment" tag="Set trialStart" variable="trialStart" value="1"></action>


            <!-- initialize trial start/end times -->
            <action type="if" condition="tThisTrialStartTimeMs == -1">
              <!--first trial, leave lasttime as -1 -->
              <action type="assignment" variable="tLastTrialStartTimeMs" value="-1"></action>
            </action>
            <action type="if" condition="tThisTrialStartTimeMs != -1">  <!--else-->
              <!--later trials, copy this into last before setting this again below -->
              <action type="assignment" variable="tLastTrialStartTimeMs" value="tThisTrialStartTimeMs"></action>
            </action>
            <action type="assignment" variable="tThisTrialStartTimeMs" value="now()/1000"></action>
            <action type="assignment" tag="Encode InterStimIntervalStart" variable="strobedDigitalWord" value="6"></action>
            <!--<action type="start_timer" tag="Start interTrialTimer" timer="interTrialTimer" 
                timebase="" duration="tITIus" duration_units="us"></action> -->
            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <!-- <transition type="goto" tag="noITI, go to control speed (trial starts)" target="controlSpeed"></transition> -->
            <!-- <transition type="timer_expired" tag="If Expried, go to control speed (trial starts)" target="controlSpeed" timer= "interTrialTimer"></transition> -->
            <transition type="conditional" tag="not doing sensory stimulus" condition="DoSolenoid==0 &amp;&amp; DoSound ==0" target="controlSpeed"></transition>
          </task_system_state>

          <task_system_state tag="controlSpeed" interruptible="YES">
            <action_marker _unmoveable="1" tag="Actions"></action_marker>
            <action type="report" message="controlling speed"></action>
            <action type="assignment" tag="Chooses speed states (run,stationary)" variable="speed_mode" value= "disc_rand(1,2)"></action>
            <action type="if" condition= "speed_mode == 1">
              <action type="assignment" tag="Stationary" variable="voltage" value= "stationary_speed"></action>
              <action type="start_timer" tag="Start stayTrialTimer" timer="stayTrialTimer" 
                timebase="" duration="tstayTrialTimeMs" duration_units="ms"></action>
              <action type="report" message="stationary timer started"></action>
            </action>
            <action type="if" condition= "speed_mode == 2">
              <action type="assignment" tag="runSpeed" variable="voltage" value= "run_speed"></action>
              <action type="start_timer" tag="Start runTrialTimer" timer="runTrialTimer" 
                timebase="" duration="trunTrialTimeMs" duration_units="ms"></action>
              <action type="report" message="running timer started"></action>
            </action>
            <action type="if" condition="optic_device == 'lasergreen' ">
              <action type="assignment" variable="laserTrigger" value="1"></action>
              <action type="assignment" variable="commandVoltage" value="voltage"></action>
              <action type="report" message="Speed Mode = $speed_mode"></action>
            </action>
            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <!-- if not doing naything else and trial is long enough, end trial -->
            <transition type="timer_expired" tag="If expried stay trial length, move to end of trial" target="EndTrial" timer= "stayTrialTimer"></transition>
            <transition type="timer_expired" tag="If expried run trial length, move to end of trial" target="EndTrial" timer= "runTrialTimer"></transition>
          </task_system_state> 

      <!-- if doing sensory stimulus -->
      <!-- do airpuff/tone, each trial has 2 airpuffs/tones, with at least 3 seconds in between-->
            


<!--
            <transition type="conditional" tag="if do sensory stimulus " condition="(DoSolenoid == 1 || DoSound ==1)" target="FirstStimDelay"></transition> 
          </task_system_state> 

            <task_system_state tag="FirstStimDelay" interruptible="YES">
              <action_marker _unmoveable="1" tag="Actions"></action_marker>
  
              <action type="assignment" tag="Calculate nFrames 1st Stim Delay" variable="firstStimDelayNFrames" value="disc_rand(0,90)"/>
              <action type="report" message="Delay stim of $firstStimDelayNFrames frames"/>
              <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
              <transition type="conditional" tag="if past delay and do airpuff, move to send first airpuffstim" condition="(counter - tCounter) >= firstStimDelayNFrames &amp;&amp; DoSolenoid == 1" target="SendFirstAirpuff"></transition>
              <transition type="conditional" tag="if past delay and do sound, move to send first sound stim" condition="(counter - tCounter) >= firstStimDelayNFrames &amp;&amp; DoSound == 1" target="SendFirstSound"></transition>
            </task_system_state>

            <task_system_state tag="SendFirstAirpuff" interruptible="YES">
              <action type="assignment" variable="juice" value="solenoidStimulusDurationUs"></action>
              <action type="assignment" variable="cTactileStimTurnedOn" value="counter"/>
              <action type="assignment" variable="tCounter" value="counter"></action>
              <action type="report" message="*** Sending 1st Tactile Stimulus"></action>
              <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
              <transition type="conditional" tag="if do airpuff and trials past waiting (3 seconds) after first puff" condition="DoSolenoid == 1 &amp;&amp; (counter - tCounter) >= 90" target="SecondStimDelay"></transition>
            </task_system_state>

            <task_system_state tag="SendFirstSound" interruptible="YES">
              <action type="play_sound" sound="Sound1" />
              <action type="play_sound" sound="Sound2" /> 
              <action type="play_sound" sound="Sound3" />
              <action type="play_sound" sound="Sound4" />
              <action type="play_sound" sound="Sound5" />
              <action type="play_sound" sound="Sound6" />
              <action type="play_sound" sound="Sound7" />
              <action type="play_sound" sound="Sound8" />
              <action type="play_sound" sound="Sound9" />
              <action type="play_sound" sound="Sound10" />
              <action type="play_sound" sound="Sound11" />
              <action type="play_sound" sound="Sound12" />
              <action type="play_sound" sound="Sound13" />
              <action type="play_sound" sound="Sound14" />
              <action type="play_sound" sound="Sound15" />
              <action type="play_sound" sound="Sound16" />
              <action type="play_sound" sound="Sound17" />
              <action type="play_sound" sound="Sound18" />
              <action type="assignment" variable="cAuditoryStimTurnedOn" value="counter"/>
              <action type="assignment" variable="tCounter" value="counter"></action>
              <action type="report" message="*** Sending 1st Auditory Stimulus"></action>
              <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
              <transition type="conditional" tag="if do tone and trials past waiting (3 seconds) after first tone" condition="DoSound == 1 &amp;&amp; (counter - tCounter) >= 90" target="SecondStimDelay"></transition>
            </task_system_state>

            <task_system_state tag="SecondStimDelay" interruptible="YES">
              <action_marker _unmoveable="1" tag="Actions"></action_marker>
              <action type="assignment" variable="tCounter" value="counter"></action>
              <action type="assignment" tag="Calculate nFrames 2nd Stim Delay" variable="secondStimDelayNFrames" value="disc_rand(0,60)"/>
              <action type="report" message="Delay stim of $secondStimDelayNFrames frames"/>
              <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
              <transition type="conditional" tag="if past delay and do airpuff, move to send second airpuff" condition="(counter - tCounter) >= secondStimDelayNFrames &amp;&amp; DoSolenoid == 1" target="SendSecondAirpuff"></transition>
              <transition type="conditional" tag="if past delay and do sound, move to send second sound" condition="(counter - tCounter) >= secondStimDelayNFrames &amp;&amp; DoSound == 1" target="SendSecondSound"></transition>
            </task_system_state>

            <task_system_state tag="SendSecondAirpuff" interruptible="YES">
              <action type="assignment" variable="juice" value="solenoidStimulusDurationUs"></action>
              <action type="assignment" variable="cTactileStimTurnedOn" value="counter"/>
              <action type="assignment" variable="tCounter" value="counter"></action>
              <action type="report" message="*** Sending 2nd Tactile Stimulus"></action>
              <action type="assignment" variable="endDelayFrames" value="disc_rand(60,120)"></action>
              <action type="report" message="*** Trial end delay will be $endDelayFrames frames "></action>
              <transition type="conditional" tag="if it has past 2 seconds plus a random time after the second airpuff" condition="(counter - tCounter) >= endDelayFrames" target="EndTrial"></transition>
            </task_system_state>  

            <task_system_state tag="SendSecondSound" interruptible="YES">
              <action type="play_sound" sound="Sound1" />
              <action type="play_sound" sound="Sound2" />
              <action type="play_sound" sound="Sound3" />
              <action type="play_sound" sound="Sound4" />
              <action type="play_sound" sound="Sound5" />
              <action type="play_sound" sound="Sound6" />
              <action type="play_sound" sound="Sound7" />
              <action type="play_sound" sound="Sound8" />
              <action type="play_sound" sound="Sound9" />
              <action type="play_sound" sound="Sound10" />
              <action type="play_sound" sound="Sound11" />
              <action type="play_sound" sound="Sound12" />
              <action type="play_sound" sound="Sound13" />
              <action type="play_sound" sound="Sound14" />
              <action type="play_sound" sound="Sound15" />
              <action type="play_sound" sound="Sound16" />
              <action type="play_sound" sound="Sound17" />
              <action type="play_sound" sound="Sound18" />
              <action type="assignment" variable="cAuditoryStimTurnedOn" value="counter"/>
              <action type="assignment" variable="tCounter" value="counter"></action>
              <action type="report" message="*** Sending 2nd Auditory Stimulus"></action>
              <action type="assignment" variable="endDelayFrames" value="disc_rand(60,120)"></action>
              <action type="report" message="Trial end delay will be $endDelayFrames frames "></action>
              <transition type="conditional" tag="if it has past 2 seconds plus a random time after the second tone" condition="(counter - tCounter) >= endDelayFrames" target="EndTrial"></transition>

              -->
          


        <task_system_state tag="EndTrial" interruptible="YES">
            <action_marker _unmoveable="1" tag="Actions"></action_marker>
            <action type="assignment" variable="laserTrigger" value="0"></action> <!-- disable trigger no matter if it went high or not -->
            <action type="report" message="Trial Ended, laser set to 0"></action>

            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" variable="tTrialsDoneSinceStart" value="tTrialsDoneSinceStart+1"/>
            <action type="report" message="*** Trial Ends *** tTrialsDoneSinceStart =$tTrialsDoneSinceStart"></action>
            <action type="report" message="_____________________________________________________________________________________"></action>
            <action type="assignment" tag="Set trialStart" variable="trialStart" value="0"></action>
            <action type="assignment" tag="End Matlab Sync" variable="sync" value="0"></action>

            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <transition type="yield" tag="return to parent task system"></transition>
        </task_system_state>
        </task_system>

      </trial>
      <action tag="Stop IO Device" type="stop_device_IO" device="LabJackU6"></action>
    </protocol>
  </experiment>
</monkeyml>

