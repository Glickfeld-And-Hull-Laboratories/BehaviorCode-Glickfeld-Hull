<?xml version="1.0"?>
<monkeyml version="1.0">
  <io_devices tag="IO Devices">
    <iodevice tag="LabJackU6" priority="" type="LabJackU6" 
              pulse_duration="juice" pulse_on="juice" 
              lever1="FIO1" lever2=""
              lever1_solenoid="FIO2"
              counter2="counter2"
              laser_trigger="laserTriggerFIO"
              strobed_digital_word="strobedDigitalWord"
              counter="counter"/>
    <iodevice tag="FakeMonkey" priority="" type="fake_monkey" id="" alt="" spike_rate="10"/>
    <iodevice type="serverside_conduit" tag="Server-side Event Conduit" resource_name="server_conduit"/>
  </io_devices>
  <variables tag="Variables">
    <folder tag="Behavioral Control">
      <variable tag="subjectNum" scope="global" logging="when_changed" default_value="0" type="integer" persistant="1" groups="ExptStruct"/>
      <variable tag="experimentXmlTrialId" scope="global" logging="when_changed" default_value="512" type="integer" persistant="1"/> <!-- n.b. it is forcibly set each trial below -->
    </folder>
    <folder tag="Stimuli">
      <variable tag="stopAfterNTrials" scope="local" logging="when_changed" default_value="90" type="integer" persistant="1" groups="ExptStruct"/>      
      <variable tag="doMatrix" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="1" groups="ExptStruct"/> 
      <variable tag="doRand" scope="global" logging="when_changed" default_value="0" type="boolean" persistant="1" groups="ExptStruct"/>

      <variable tag="stimulusDurationUs" scope="global" logging="when_changed" default_value="100000" type="integer" persistant="1" groups="StimulusSpecs"/>
      <variable tag="soundDurationMs" scope="global" logging="when_changed" default_value="1000" type="integer" persistant="1" groups="StimulusSpecs"/>

 	    <variable tag="nTotalImagingFrames" scope="global" logging="when_changed" default_value="3600" type="integer" persistant="1" groups="ImagingVars"/>
      <variable tag="frameImagingRateMs" scope="global" logging="when_changed" default_value="500" type="integer" persistant="1" groups="ImagingVars"/>
      <variable tag="frameImagingExposureMs" scope="global" logging="when_changed" default_value="450" type="integer" persistant="1" groups="ImagingVars"/>	 
      <variable tag="frameImagingBinning" scope="global" logging="when_changed" default_value="4" type="integer" persistant="1" groups="ImagingVars"/>

      <variable tag="nScansOn" scope="global" logging="when_changed" default_value="200" type="integer" persistant="1" groups="StimulusSpecs"/>
      <variable tag="nScansOff" scope="global" logging="when_changed" default_value="200" type="integer" persistant="1" groups="StimulusSpecs"/>

    </folder>
    <folder tag="Task Status">
      <variable tag="stimulusOn" scope="global" logging="when_changed" default_value="0" type="boolean"/>
      <variable tag="trialStart" scope="global" logging="when_changed" default_value="0" type="boolean"/>
    </folder>
    <folder tag="Online Display">
      <variable tag="sync" scope="global" logging="when_changed" default_value="0" type="integer"/>
    </folder>
    <folder tag="Hardware variables">
      <variable tag="FIO1" full_name="FIO1" default_value="0" scope="GLOBAL" type="INTEGER" editable="never" logging="when_changed" groups="Hardware"/>
      <variable tag="FIO2" full_name="FIO2" default_value="0" scope="GLOBAL" type="boolean" editable="never" logging="when_changed" groups="Hardware"/>
      <variable tag="laserTriggerFIO" full_name="laserTriggerFIO" default_value="0" scope="GLOBAL" type="boolean" logging="when_changed" persistant="0"/>
      <variable tag="strobedDigitalWord" full_name="strobedDigitalWord" default_value="0" scope="GLOBAL" type="integer" logging="when_changed" persistant="0"/>
      <variable tag="juice" full_name="juice" scope="GLOBAL" logging="when_changed" default_value="0" type="integer" groups="Hardware"/>
      <variable tag="counter" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"></variable>
      <variable tag="counter2" scope="global" logging="when_changed" default_value="0" type="integer" persistant="1" groups="SpeedCounters"></variable>
      <variable tag="sendLaserParams" full_name="sendLaserParams" scope="GLOBAL" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="sendSerialParams" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
    </folder>
    <folder tag="Internal Variables">
      <variable tag="tTempStim" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      <variable tag="tCounter2" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="ttCounter2" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="tStimulusDurationUs" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
      
	    <variable tag="spCounter1" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
	    <variable tag="spCounter2" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
	    <variable tag="spCounter3" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter4" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter5" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter6" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter7" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter8" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter9" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="spCounter10" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="speedTimerIntervalMs" scope="global" logging="when_changed" default_value="500" type="integer" persistant="0" groups="ExptStruct"/>
      <variable tag="tITIWheelCounter" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>
      <variable tag="tStimWheelCounter" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0" groups="SpeedCounters"/>

      <variable tag="tTrialsDoneSinceStart" scope="global" logging="when_changed" default_value="90" type="integer" persistant="1"/>
      <variable tag="tTrialStartMWTimestampMs" scope="global" logging="when_changed" default_value="90" type="integer" persistant="1"/>
      <variable tag="tThisTrialStartTimeMs" scope="global" logging="when_changed" default_value="90" type="integer" persistant="1"/>
      <variable tag="tLastTrialStartTimeMs" scope="global" logging="when_changed" default_value="90" type="integer" persistant="1"/>
      <variable tag="frameCountN" scope="global" logging="when_changed" default_value="0" type="integer" persistant="0"/>
    </folder>
  </variables>
  <sounds tag="Sounds">
    <sound tag="debuggingSound" type="wav_file" path="./wavs/cerebellarStimWavs/sin_15000Hz_.3s.wav" full_name="debuggingSound"/>
  </sounds>
  <stimuli tag="Stimuli">
    <stimulus type="blank_screen" tag="background" color="0.5,0.5,0.5"></stimulus>       
  </stimuli>    
  <experiment tag="Experiment" full_name="">
    <protocol tag="JuiceOnHoldProtocol" full_name="" selection="sequential" nsamples="1" sampling_method="cycles" description="" interruptible="YES">
      <action type="queue_stimulus" stimulus="background"></action>
      
    <action tag="Start IO Device" type="start_device_IO" device="LabJackU6"></action>
      <!-- init actions before running trials after any press of start-->
            
      <action type="assignment" variable="tTrialsDoneSinceStart" value="0"></action>
      <action type="assignment" tag="juice = 0" variable="juice" value="0"></action>
      <action type="assignment" tag="set counter to 0" variable="counter" value="0"></action>
      <action type="assignment" tag="set counter2 to 0" variable="counter2" value="0"></action>
      <action type="assignment" tag="set tCounter2 to 0" variable="tCounter2" value="0"></action>
      <action type="assignment" tag="set ttCounter2 to 0" variable="ttCounter2" value="0"></action>
        
      <trial tag="Trial" full_name="Trial" description="" interruptible="1" selection="sequential" nsamples="1" sampling_method="cycles">
      <trial tag="New List" nsamples="99999999" sampling_method="samples" selection="random_without_replacement">
      <!--<range_replicator tag="New Replicator" from="0" to="89" step="1" variable="rrStimulusNumber"> -->
    <task_system tag="TS" full_name="TS" interruptable="YES" description="" interruptible="YES" _error="Task Systems must contain >=1 transition that yields to parent">
      <task_system_state tag="Inter Stimulus Interval" interruptible="YES">
          <action_marker _unmoveable="1" tag="Actions"></action_marker>

          <action type="update_stimulus_display" tag="-"></action>        
          <!-- if we have done enough trials, abort this trial - before any encodes/sync are done -->
          <action type="if" condition="stopAfterNTrials > 0 &amp;&amp; tTrialsDoneSinceStart > stopAfterNTrials">
              <action type="report" message="** Stopping after completing $stopAfterNTrials trials"></action>
              <action type="stop_experiment"></action>  
          </action>
          

          <action type="assignment" variable="tTrialStartMWTimestampMs" value="now()/1000"></action>  <!-- integer valued ms timestamp -->

          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>
          <action type="assignment" tag="Encode START" variable="strobedDigitalWord" value="170"></action>

          <!--Transmit the trial timestamp so strobed code sequences are unique -->
          <action type="assert" condition="tTrialStartMWTimestampMs &lt;= 2147483648" 
                  message="tTrialStartMWTimestampMs is too large - should happen only after several days of running!?"
                  stop_on_failure="1"/>  
          <!-- prevent overflow outside 2**31ms ~ 10 days - I don't know how to get unsigned casts in the XML -->
          <!-- encode trialStartTimestamp in bytes: 4 bytes: millions of seconds, 1000s, s, ms -->
          <action type="assignment" tag="Encode TimestampStart" variable="strobedDigitalWord" value="200"/>
          <action type="assignment" variable="strobedDigitalWord" value="tTrialStartMWTimestampMs/1000/1000000"/>  <!-- mega s -->
          <action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs- (tTrialStartMWTimestampMs/1000000000)*1000000000) /1000000"/> <!-- mega to kilo s -->
          <action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs- (tTrialStartMWTimestampMs/1000000)*1000000) /1000"/> <!-- 0-999s -->
          <action type="assignment" variable="strobedDigitalWord" value="(tTrialStartMWTimestampMs - (tTrialStartMWTimestampMs/1000)*1000)"/>  <!-- ms -->
          <action type="assignment" tag="Encode TimestampEnd" variable="strobedDigitalWord" value="201"/>

          <action type="assignment" tag="Sync Matlab" variable="sync" value="1"></action>
          <action type="assignment" tag="Set trialStart" variable="trialStart" value="1"></action>
          <action type="assignment" tag="juice = 0" variable="juice" value="0"></action>
          <action type="assignment" tag="tStimTimeUs Set" variable="tStimulusDurationUs" value="stimulusDurationUs"/>
          <action type="assignment" tag="-" variable="laserTriggerFIO" value="0"></action>

      	
          <!-- initialize trial start/end times -->
          <action type="if" condition="tThisTrialStartTimeMs == -1">  
              <!--first trial, leave lasttime as -1 -->
              <action type="assignment" variable="tLastTrialStartTimeMs" value="-1"></action>
          </action>
          <action type="if" condition="tThisTrialStartTimeMs != -1">  <!--else-->
              <!--later trials, copy this into last before setting this again below -->
              <action type="assignment" variable="tLastTrialStartTimeMs" value="tThisTrialStartTimeMs"></action>
          </action>
          <action type="assignment" variable="tThisTrialStartTimeMs" value="now()/1000"></action>
          <action type="assignment" tag="Clear stimulusOn" variable="stimulusOn" value="0"></action>
          <action type="assignment" tag="Encode InterStimIntervalStart" variable="strobedDigitalWord" value="6"></action> 

          <action type="report" message="In InterStimInterval, waiting for $nScansOff frames"></action>          
          <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
          <transition type="conditional" tag="If nScansOff, move to SendStim" condition="counter >= ((nScansOff+nScansOn) * tTrialsDoneSinceStart) + nScansOff" target="PlaySound"></transition>
      </task_system_state>

      <task_system_state tag="PlaySound" interruptible="YES">
            <action_marker _unmoveable="1" tag="Actions"></action_marker>
            <action type="assignment" tag="Log Number of Wheel-pulses received during ITI" variable="tITIWheelCounter" value="counter2 - tCounter2"></action>

            <!-- Debugging sound below: delete before committing -->
            <action type="play_sound" sound="debuggingSound"/>
      
            <!-- update display, finalize variables -->
            <action tag="Update Display" type="update_stimulus_display"></action>
            <action type="start_timer" tag="Start timer with same duration as sound" timer="soundDurationTimer" timebase="" duration="soundDurationMs" duration_units="ms"></action> 



            <!-- Can't actually have a system state for timer 1, but it would be here-->
            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <transition type="timer_expired" timer="soundDurationTimer" target="SendStim"/> 
      </task_system_state>


      <task_system_state tag="SendStim" interruptible="YES">
            <action_marker _unmoveable="1" tag="Actions"></action_marker>
            <action type="report" message="*** Tactile Stimulus Sent -- Staying in Post-Stim State for $nScansOn scans."></action>
            <action type="assignment" variable="juice" value="tStimulusDurationUs"/>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            <action type="assignment" tag="reset ttCounter2 to counter2" variable="ttCounter2" value="counter2"></action>

            <!-- Debugging sound below: delete before committing -->
            <action type="play_sound" sound="debuggingSound"/>
            <action type="start_timer" tag="Start 1st Speed Timer" timer="speedTimer1" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action> 

            <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter1" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

            <!-- Can't actually jave a system state for timer 1, but it would be here-->
            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <transition type="timer_expired" timer="speedTimer1" target="speedCounter2"/> 
            <transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter2" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer2" timer="speedTimer2" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter1" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>

          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter2" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>
      		
      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter3" timer="speedTimer2"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter3" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer3" timer="speedTimer3" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter2" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>

          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter3" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>
      		
      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter4" timer="speedTimer3"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter4" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer4" timer="speedTimer4" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter3" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>

          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter4" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>
      		
      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter5" timer="speedTimer4"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter5" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer5" timer="speedTimer5" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter4" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter5" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter6" timer="speedTimer5"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter6" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer6" timer="speedTimer6" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter5" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter6" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter7" timer="speedTimer6"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter7" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer7" timer="speedTimer7" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter6" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter7" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter8" timer="speedTimer7"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter8" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer8" timer="speedTimer8" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter7" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter8" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter9" timer="speedTimer8"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter9" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer9" timer="speedTimer9" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter8" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter9" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="timer_expired" target="speedCounter10" timer="speedTimer9"></transition>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
      
      <task_system_state tag="speedCounter10" interruptible="YES">
      		<action_marker _unmoveable="1" tag="Actions"></action_marker>
      		<action type="start_timer" tag="Start speedTimer10" timer="speedTimer10" timebase="" duration="speedTimerIntervalMs" duration_units="ms"></action>
      		<action type="assignment" tag="Log Speed of previous Interval" variable="spCounter9" value="counter2 - tCounter2"></action>
          <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
      		
          <action type="if" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)"> 
            <action type="assignment" tag="Log Speed of current Interval" variable="spCounter10" value="counter2 - tCounter2"></action>
            <action type="assignment" tag="reset tCounter2 to counter2" variable="tCounter2" value="counter2"></action>
            </action>

      		<transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
      		<transition type="conditional" tag="If nScansON, move to EndTrial" condition="counter >= (nScansOff+nScansOn) * (1+tTrialsDoneSinceStart)" target="EndTrial" ></transition>
      </task_system_state>
                    
      <task_system_state tag="EndTrial" interruptible="YES">
            <action_marker _unmoveable="1" tag="Actions"></action_marker>
            <action type="assignment" tag="Log Speed of entire stim Interval" variable="tStimWheelCounter" value="counter2 - ttCounter2"></action>
            <action type="assignment" variable="laserTriggerFIO" value="0"></action> <!-- disable trigger no matter if it went high or not -->
            <action type="assignment" tag="End Matlab Sync" variable="sync" value="0"></action>
            
            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" tag="Encode END" variable="strobedDigitalWord" value="85"></action>
            <action type="assignment" variable="tTrialsDoneSinceStart" value="tTrialsDoneSinceStart+1"/>
              
            <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
            <transition type="yield" tag="return to parent task system"></transition>
        </task_system_state> 
        </task_system>
      </trial>
      </trial>
      <action tag="Stop IO Device" type="stop_device_IO" device="LabJackU6"></action>
    </protocol>
  </experiment>
</monkeyml>

